#!/bin/sh

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Source the development progress script
if [ -f "../scripts/dev-progress.sh" ]; then
    source ../scripts/dev-progress.sh
elif [ -f "scripts/dev-progress.sh" ]; then
    source scripts/dev-progress.sh
else
    # Fallback progress bar function
    print_progress_bar() {
        local current=$1
        local total=$2
        local width=50
        local percentage=$((current * 100 / total))
        local filled=$((width * current / total))
        local empty=$((width - filled))
        
        printf "${CYAN}Progress: ["
        printf "%${filled}s" | tr ' ' '█'
        printf "%${empty}s" | tr ' ' '░'
        printf "] ${percentage}%%${NC}\n"
    }
    
    # Fallback development progress calculation
    calculate_dev_progress() {
        echo "${PURPLE}=== Development Progress Report ===${NC}"
        
        # Test coverage progress (mock calculation)
        local test_coverage=75
        local target_coverage=90
        echo "${BLUE}Test Coverage:${NC}"
        print_progress_bar $test_coverage $target_coverage
        
        # Code quality progress
        local lint_score=85
        local target_lint=95
        echo "${BLUE}Code Quality (ESLint):${NC}"
        print_progress_bar $lint_score $target_lint
        
        # Feature completion progress
        local completed_features=12
        local total_features=20
        echo "${BLUE}Feature Completion:${NC}"
        print_progress_bar $completed_features $total_features
        
        # Documentation progress
        local docs_complete=60
        local target_docs=100
        echo "${BLUE}Documentation:${NC}"
        print_progress_bar $docs_complete $target_docs
        
        # Overall project progress
        local overall_progress=$(((test_coverage + lint_score + (completed_features * 100 / total_features) + docs_complete) / 4))
        echo "${GREEN}Overall Project Progress:${NC}"
        print_progress_bar $overall_progress 100
        
        echo ""
    }
fi

# Check for changed files and run tests
changed_files=$(git diff --name-only HEAD HEAD~ -- '*.ts' '*.js')
if [ -n "$changed_files" ]; then
    echo "${BLUE}Running tests due to changes in the following TS/JS files:${NC}"
    echo "$changed_files"
    echo ""
    
    # Show development progress before running tests
    calculate_dev_progress
    
    # Run tests with progress indication
    echo "${YELLOW}Running tests...${NC}"
    if pnpm test; then
        echo "${GREEN}✅ Tests passed successfully!${NC}"
    else
        echo "${RED}❌ Tests failed. Please fix issues before pushing.${NC}"
        exit 1
    fi
else
    echo "${GREEN}No TS/JS files have been changed. Skipping tests.${NC}"
    echo ""
    calculate_dev_progress
fi

echo "${CYAN}=== Pre-push checks completed ===${NC}"
